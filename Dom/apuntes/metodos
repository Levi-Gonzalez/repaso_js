/*# LENGHT : propiedad para saber el largo o longitu del array y tambien cuantos elementos hay

# ej: const clothing = ['shoes', 'shirts', 'socks', 'sweaters']; hay 4 elementos.

Spreed operator: [...nombreDelaVariavble] / {...nombreDeLaVariable} copia un array o un objeto trayendo todos sus elementos de la variable

/\*ForEach → metodo de orden superior.

let numeros = [1,2,3,4,5,6,7,8,9]
numeros .forEach(num => {
console.log("El numero es" + " " + num);
console.log("El doble del numero es" + " " + num*2);
});


\* Find → busca y retorna el primero que encuentra

const usuarios = [
{nombre: "Basti", apellido: "Gonzalez", edad:2, DNI: 58205741},
{nombre: "Jere", apellido: "Gonzalez", edad:15,DNI: 123456789},
{nombre: "Santi", apellido: "Gonzalez", edad:13, DNI:987456321}
]

const buscarNombre = (usuarios) =>{
return usuarios.DNI == 58205741
}
let resultado_find = usuarios.find(buscarNombre)
console.log(resultado_find);
\*/

/*
Filter → Retorna el arreglo con los elementos que cumplieron con esa condicion.
Se utiliza para quitar un elemento de un arreglo ej : si nombre !== Basti entonces nos deolvera "Jere" , "Santi"
const usuarios = [
{nombre: "Basti", apellido: "Gonzalez", edad:2, DNI: 58205741},
{nombre: "Jere", apellido: "Gonzalez", edad:15,DNI: 123456789},
{nombre: "Santi", apellido: "Gonzalez", edad:13, DNI:987456321}
]

const mayor_de_edad = (usuarios) =>{

    return usuarios.edad >= 10

}

let resultado_filter = usuarios.filter (mayor_de_edad)
console.log(resultado_filter);
\*/

\*
Map → crea un nuevo array, con elementos del original cuando apartir de algo queremos tener un nuevo array con modificaciones

const cursos = [
{
nombre: "React",
precio: 14000
},
{
nombre: "Desarrollo Web",
precio: 10000
},
{
nombre: "JS",
precio: 11000
},
]
const nombres = cursos.nombre.map((elemento) => elemento.nombre)
console.log(nombres );

_/
/_ Reduce → Reduce todo a un solo valor, sirve para calcular las ventas.

const ventas = [
{
nombre: "Heladera",
precio: 14000
},
{
nombre: "Cocina",
precio: 10000
},
{
nombre: "Lavarropas",
precio: 11000
},
]

const calcular_ventas = (acu, producto) => {

    acu = acu + producto.precio
    return acu

}

let venta_total = ventas.reduce (calcular_ventas, 0 )
console.log("El precio total es de: " + venta_total);

\*/

/\* SORT → Ordena alfabeticamente y modifica el array original.

let lista_ciudades = ["Monte grande" , "Bs. As." , "Bariloche" , "Madrid", "New York"];
console.log(lista_ciudades.sort());
console.log(lista_ciudades.reverse());

_/
/_ SORT toma el primer digito del numero y lo ordena pero no tiene en cuenta los siguientes
los ordena de una mala manera la forma correcta es crear esta funcion
para que pueda ordenar los numeros de menos a mayor!!

let numeros = [ 3,5,600,0,4,100,48,88,50,1]
console.log(numeros.sort());

function ordenar (a , b) {
return a-b
}

console.log(numeros.sort(ordenar));

*/